// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name MXAPIManager
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Alamofire
import CommonCrypto
import Foundation
@_exported import MXAPIManager
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct MXAPIError {
  public var message: Swift.String
  public var code: Swift.Int
}
public enum MXHTTPMethod {
  case get
  case post
  case put
  case delete
  case head
  case patch
  case connect
  case trace
  public static func == (a: MXAPIManager.MXHTTPMethod, b: MXAPIManager.MXHTTPMethod) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@objc public protocol MXAPIManagerDelegate {
  @objc optional func mxRequestResult(code: Swift.Int, message: Swift.String?, data: Any?)
}
@_hasMissingDesignatedInitializers public class MXAPIManager {
  public static let shared: MXAPIManager.MXAPIManager
  public var delegate: (any MXAPIManager.MXAPIManagerDelegate)?
  public var host: Swift.String
  public var appId: Swift.String
  public var appSecert: Swift.String
  public var token: Swift.String
  final public let version: Swift.String
  public func config(_ host: Swift.String, appId: Swift.String, appSecert: Swift.String)
  public func setRequestTimeout(with interval: Foundation.TimeInterval)
  public func update(token: Swift.String)
  public func update(language: Swift.String)
  public func showLog()
  @objc deinit
}
extension MXAPIManager.MXAPIManager {
  public func request(path: Swift.String, method: MXAPIManager.MXHTTPMethod, parameters: [Swift.String : Any]?, response: @escaping (_ data: Any?, _ message: Swift.String, _ code: Swift.Int) -> Swift.Void)
  public func request(path: Swift.String, method: Swift.String, parameters: [Swift.String : Any]?, response: @escaping (_ data: Any?, _ message: Swift.String, _ code: Swift.Int) -> Swift.Void)
  public func request(with url: Swift.String, path: Swift.String, method: MXAPIManager.MXHTTPMethod, parameters: [Swift.String : Any]?, response: @escaping (_ data: Any?, _ message: Swift.String, _ code: Swift.Int) -> Swift.Void)
  public func upload(file: Foundation.Data, name: Swift.String, fileName: Swift.String, mimeType: Swift.String, path: Swift.String, method: MXAPIManager.MXHTTPMethod, parameters: Alamofire.Parameters?, response: @escaping (_ data: Any?, _ message: Swift.String, _ code: Swift.Int) -> Swift.Void)
  public func cancleRequest(path: Swift.String)
}
extension MXAPIManager.MXAPIError : Foundation.LocalizedError {}
extension MXAPIManager.MXHTTPMethod : Swift.Equatable {}
extension MXAPIManager.MXHTTPMethod : Swift.Hashable {}
